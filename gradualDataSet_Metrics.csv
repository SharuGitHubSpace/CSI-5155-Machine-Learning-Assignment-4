# TEST CONFIGURATION BEGIN,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
# DataStream(n_targets=-1, target_idx=1, cat_features=None, name=None),,,,,,,,,,,,,,,,,,,,,,,,,,,
# [Hoeffding Tree] HoeffdingTreeClassifier(binary_split=False, grace_period=200, leaf_prediction='nba', max_byte_size=33554432, memory_estimate_period=1000000, nb_threshold=0, no_preprune=False, nominal_attributes=None, remove_poor_atts=False, split_confidence=1e-07, split_criterion='info_gain', stop_mem_management=False, tie_threshold=0.05),,,,,,,,,,,,,,,,,,
# [SAM KNN] SAMKNNClassifier(ltm_size=0.4, max_window_size=None, min_stm_size=50, n_neighbors=5, stm_size_option='maxACCApprox', use_ltm=False, weighting='distance'),,,,,,,,,,,,,,,,,,,,,,,,
# [Hoeffding Adaptive Tree] HoeffdingAdaptiveTreeClassifier(binary_split=False, bootstrap_sampling=True, grace_period=200, leaf_prediction='nba', max_byte_size=33554432, memory_estimate_period=1000000, nb_threshold=0, no_preprune=False, nominal_attributes=None, random_state=None, remove_poor_atts=False, split_confidence=1e-07, split_criterion='info_gain', stop_mem_management=False, tie_threshold=0.05),,,,,,,,,,,,,,,,
# [Ensemble OzaBag] OzaBaggingClassifier(base_estimator=KNNClassifier(leaf_size=30, max_window_size=2000, metric='euclidean', n_neighbors=8), n_estimators=2, random_state=None),,,,,,,,,,,,,,,,,,,,,,,,,
# [Ensemble DWMC] DynamicWeightedMajorityClassifier(base_estimator=NaiveBayes(nominal_attributes=None), beta=0.5, n_estimators=5, period=50, theta=0.01),,,,,,,,,,,,,,,,,,,,,,,,,,
# EvaluatePrequential(batch_size=1000, data_points_for_classification=False, max_samples=52848, max_time=inf, metrics=['accuracy', 'running_time', 'model_size'], n_wait=1000, output_file='//content//drive//MyDrive//Colab ' 'Notebooks//ML_Assignment4//gradualDataSet_Metrics.csv', pretrain_size=1000, restart_stream=True, show_plot=False),,,,,,,,,,,,,,,,,,,
# TEST CONFIGURATION END,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
id,mean_acc_[Hoeffding Tree],current_acc_[Hoeffding Tree],mean_acc_[SAM KNN],current_acc_[SAM KNN],mean_acc_[Hoeffding Adaptive Tree],current_acc_[Hoeffding Adaptive Tree],mean_acc_[Ensemble OzaBag],current_acc_[Ensemble OzaBag],mean_acc_[Ensemble DWMC],current_acc_[Ensemble DWMC],training_time_[Hoeffding Tree],testing_time_[Hoeffding Tree],total_running_time_[Hoeffding Tree],training_time_[SAM KNN],testing_time_[SAM KNN],total_running_time_[SAM KNN],training_time_[Hoeffding Adaptive Tree],testing_time_[Hoeffding Adaptive Tree],total_running_time_[Hoeffding Adaptive Tree],training_time_[Ensemble OzaBag],testing_time_[Ensemble OzaBag],total_running_time_[Ensemble OzaBag],training_time_[Ensemble DWMC],testing_time_[Ensemble DWMC],total_running_time_[Ensemble DWMC],model_size_[Hoeffding Tree],model_size_[SAM KNN],model_size_[Hoeffding Adaptive Tree],model_size_[Ensemble OzaBag],model_size_[Ensemble DWMC]
1000,0.601,0.601,0.905,0.905,0.571,0.571,0.866,0.866,0.68,0.68,1.698033,0.562755,2.260788,0.824732,0.039144,0.863877,5.599083,0.655736,6.254819,3.009028,1.026356,4.035384,7.156843,2.532925,9.689769,926.22168,45536.28418,707.158203,17789.32422,420.813477
2000,0.6065,0.612,0.8805,0.856,0.565,0.559,0.884,0.902,0.6845,0.689,2.498419,1.104721,3.603141,1.089925,0.072386,1.162311,8.393817,1.177631,9.571448,4.542205,1.624025,6.166229,10.502253,4.995878,15.498131,926.22168,45805.56152,706.455078,17788.48047,420.711914
3000,0.601667,0.592,0.734,0.441,0.564667,0.564,0.747333,0.474,0.601,0.434,3.314337,1.591794,4.906131,3.345658,0.11387,3.459528,11.230629,1.715927,12.946557,6.112519,2.258089,8.370608,14.328214,7.454993,21.783207,926.22168,45741.37793,712.185547,17790.10547,537.665039
4000,0.6005,0.597,0.741,0.762,0.567,0.574,0.7375,0.708,0.61575,0.66,4.139257,2.051518,6.190775,4.950505,0.149458,5.099963,14.082079,2.25447,16.336548,7.58198,2.863287,10.445267,18.67622,10.433221,29.109441,926.22168,45570.79981,787.205078,17788.16797,514.250977
5000,0.6024,0.61,0.7452,0.762,0.5706,0.585,0.7502,0.801,0.6098,0.586,4.927886,2.563536,7.491422,5.388558,0.180701,5.569259,16.964796,2.827056,19.791852,9.029666,3.445434,12.4751,22.609295,13.288228,35.897523,926.22168,46339.75293,837.232422,17791.54297,490.860352
6000,0.600333,0.59,0.753667,0.796,0.58,0.627,0.7595,0.806,0.616167,0.648,5.765557,3.017437,8.782994,11.612684,0.232276,11.84496,19.401593,3.34573,22.747323,10.467141,4.100752,14.567893,26.592543,16.009508,42.602051,926.22168,46365.75684,985.142578,17789.48047,537.665039
7000,0.601429,0.608,0.762857,0.818,0.598143,0.707,0.767429,0.815,0.621857,0.656,6.534615,3.496171,10.030786,17.83101,0.287207,18.118217,21.926484,3.564655,25.491139,11.925849,4.745057,16.670907,30.497775,18.879197,49.376971,926.22168,46393.19043,684.060547,17790.16797,525.313477
8000,0.6035,0.618,0.767625,0.801,0.607625,0.674,0.7755,0.832,0.63425,0.721,7.261813,4.018173,11.279986,23.924255,0.34195,24.266205,24.255273,3.966952,28.222225,13.379575,5.360448,18.740023,34.423756,21.713767,56.137522,955.026367,46421.56543,719.962891,17781.98047,490.883789
9000,0.610222,0.664,0.766333,0.756,0.613667,0.662,0.774778,0.769,0.633667,0.629,8.037903,4.426772,12.464675,30.20811,0.396933,30.605043,26.695036,4.444935,31.139971,14.94427,6.023805,20.968075,38.295664,24.434134,62.729798,961.78418,46448.88184,735.201172,17790.13672,537.665039
10000,0.6017,0.525,0.7517,0.62,0.6049,0.526,0.7624,0.651,0.6114,0.411,8.844887,4.876901,13.721788,33.562634,0.453408,34.016041,29.335834,4.94281,34.278644,16.380306,6.712029,23.092335,41.987881,27.343934,69.331815,972.612305,45733.99121,520.697266,17792.57422,447.321289
11000,0.599182,0.574,0.766091,0.91,0.605455,0.611,0.749182,0.617,0.628182,0.796,9.592097,5.452071,15.044169,33.839214,0.486365,34.325579,32.148857,5.494938,37.643795,17.857035,7.357222,25.214257,44.559458,29.681401,74.24086,976.682617,45338.07617,530.056641,17790.13672,311.805664
